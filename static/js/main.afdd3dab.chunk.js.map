{"version":3,"sources":["reportWebVitals.js","index.js","App.js"],"names":["reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","react_default","a","createElement","StrictMode","App","randInt","min","max","Math","floor","random","round","num","dp","Number","EPSILON","pow","randItem","arr","length","range","start","stop","Object","_Users_teddy_math_practice_site_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","Array","keys","map","i","mapArithmeticChar","operator","optext","_useState","useState","_useState2","_Users_teddy_math_practice_site_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","num1","setNum1","_useState3","_useState4","num2","setNum2","_useState5","_useState6","answer","setAnswer","_useState7","_useState8","operatorText","setOperatorText","_useState9","_useState10","transcript","setTranscript","_useState11","_useState12","transcriptShowed","setTranscriptShowed","_useState13","_useState14","corrects","setCorrects","_useState15","_useState16","questionsAnswered","setQuestionsAnswered","_useState17","_useState18","stats","setStats","_useState19","_useState20","statsDisplay","setStatsDisplay","_useState21","_useState22","statsText","setStatsText","_useState23","_useState24","n1range","setn1range","_useState25","_useState26","n2range","setn2range","_useState27","_useState28","setOperator","_useState29","_useState30","validoperators","setValidOperators","_useState31","_useState32","doIntervalSaving","setDoIntervalSaving","_useState33","_useState34","intervalSavingAmount","setIntervalSavingAmount","config","getLocalStorage","JSON","parse","localStorage","getItem","questionSettings","scores","saving","setItem","stringify","validOps","interval","value","_loop","row","react__WEBPACK_IMPORTED_MODULE_3___default","Fragment","TranscriptRow","status","props","children","question","feedback","old","concat","_loop2","key","obj","StatsRow","date","score","accuracy","clearLocalStorage","clear","window","location","reload","newQuestion","randOp","n1","n2","markAnswer","prev","eval","style","color","addTranscript","conf","clearTranscript","updateSettings","elements","getElementsByClassName","includedNums","checked","push","includedOps","selectAllNumbers","selectNoNumbers","saveScore","d","Date","getFullYear","getMonth","getDate","getHours","getMinutes","year","month","hours","minutes","dateString","String","unixTime","getTime","accuracyNum","toggleTranscript","transcriptContainer","statsContainer","display","updateSavingSettings","NumberLabel","isChecked","includes","class","for","defaultChecked","type","id","name","OperatorLabel","op","className","width","backgroundColor","useEffect","onClick","position","bottom","left","onKeyDown","target","onInput"],"mappings":"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","file":"static/js/main.afdd3dab.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import './App.css';\nimport React, { Component, useState, useEffect}  from 'react';\n\n//helper funcs\nfunction randInt(min, max) { //random number inclusive both ranges\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction round(num, dp){\n  return Math.round((num + Number.EPSILON) * 10**dp) / 10**dp\n}\n\nfunction randItem(arr) { //random number inclusive both ranges\n  return arr[randInt(0, arr.length-1)]\n}\n\nfunction range(start, stop) { //returns list of nums inclusive both ranges\n  return [...Array(stop).keys()].map(i => i + start);\n}\n\nfunction mapArithmeticChar(operator){\n  let optext = \"\"\n  switch (operator){\n    case \"+\":\n      optext = \"+\"\n      break\n    case \"-\":\n      optext = \"−\" //actually a different char lol\n      break\n    case \"*\":\n      optext = \"×\"\n      break\n    case \"/\":\n      optext = \"÷\"\n      break\n  }\n  return optext\n}\n\n\n\n//main app\nconst App = () => {\n  \n  //current\n  const [num1, setNum1] = useState(0);\n  const [num2, setNum2] = useState(0);\n  const [answer, setAnswer] = useState(0);\n  const [operatorText, setOperatorText] = useState(0);\n  const [transcript, setTranscript] = useState([])\n  const [transcriptShowed, setTranscriptShowed] = useState(0)\n  const [corrects, setCorrects] = useState(0)\n  const [questionsAnswered, setQuestionsAnswered] = useState(0)\n  const [stats, setStats] = useState(0)\n  const [statsDisplay, setStatsDisplay] = useState([])\n  const [statsText, setStatsText] = useState(0)\n\n  //config params\n  const [n1range, setn1range] = useState(0);\n  const [n2range, setn2range] = useState(0);\n  const [operator, setOperator] = useState(0);\n  const [validoperators, setValidOperators] = useState(0);\n  const [doIntervalSaving, setDoIntervalSaving] = useState(0);\n  const [intervalSavingAmount, setIntervalSavingAmount] = useState(0);\n\n  //configure local storage\n  let config = {} \n  \n\n\n  const getLocalStorage = () => {\n    config = JSON.parse(localStorage.getItem('config'))\n    //console.log(config)\n    if (!config){ // if doesnt exist (new person)\n      config = {} //reset config from null or undefined\n      //console.log(\"[!] no local storage found! setting them up now\")\n      //default settings for the site\n      let questionSettings = {}\n      questionSettings.n1range = [1,2,3,4,5,6,7,8,9]\n      questionSettings.n2range = [1,2,3,4,5,6,7,8,9]\n      questionSettings.operator = \"+\"\n      questionSettings.validOps = [\"+\", \"-\", \"*\", \"/\"]\n\n      //console.log(questionSettings)\n\n      config.questionSettings = questionSettings\n      //config.transcript = []\n\n      // set default score (0)\n      let scores = {}\n      scores.corrects = 0\n      scores.questionsAnswered = 0\n\n      config.scores = scores\n\n      //set default stats (empty {})\n      let stats = {}\n      config.stats = stats\n\n      //set default saving settings\n      let saving = {}\n      saving.interval = 30\n      saving.doIntervalSaving = false\n      config.saving = saving\n\n      localStorage.setItem('config', JSON.stringify(config))\n    }\n\n\n    let questionSettings = config.questionSettings\n    //set values of params accordingly\n    setn1range(questionSettings.n1range)\n    setn2range(questionSettings.n2range)\n    setOperator(questionSettings.operator)\n    setValidOperators(questionSettings.validOps)\n\n    //set scores\n    if (config.scores){\n      setCorrects(config.scores.corrects)\n      setQuestionsAnswered(config.scores.questionsAnswered)\n    }else{\n      let scores = {}\n      scores.corrects = 0\n      scores.questionsAnswered = 0\n\n      config.scores = scores\n    }\n\n    if (config.stats){\n      setStats(config.stats)\n    }else{\n      config.stats = {} //data structure: date: score:[correct,total], accuracy:}\n    }\n\n    //set current interval saving value\n    if (config.saving){\n      //console.log(\"CONfig.SAVING is\", config.saving)\n      setIntervalSavingAmount(config.saving.interval)\n      setDoIntervalSaving(config.saving.doIntervalSaving)\n      document.getElementById(\"interval-saving-amount-input\").value = config.saving.interval\n    }else{\n    }\n    \n    if (config.transcript && !transcriptShowed){\n      //set transcript\n      setTranscriptShowed(1)//avoid displaying transcript twice on local storage update, also used for stats\n      //console.log(\"trasncriptshowed\", transcriptShowed)\n      let ttb = document.getElementById(\"transcript-table-body\")\n      //console.log(\"transcript-table-body\", ttb, 'len', ttb.childElementCount)\n      //console.log(\"adding html transcript...\")\n      \n      for (var i=config.transcript.length-1; i>=0; i--){//god why this took an hour\n        let row = <>\n        <TranscriptRow \n        status={config.transcript[i].props.children.props.status} //WTF IS PROPS CHILDREN PROPS STATUS WHAT\n        question={config.transcript[i].props.children.props.question}  //NOW THE ARRAY FLIPS AFTER EVERY RELOAD WTF\n        answer={config.transcript[i].props.children.props.answer}  //and now its deleating things :/\n        feedback={config.transcript[i].props.children.props.feedback} //AND NOW IT FINALLY WORKS AAAAÀAAÂĀÆ\n        />\n        </>\n        setTranscript(old => [row, ...old]) // insert new row at front of array (not back) \n      }\n      \n      //set statistics\n      setStatsDisplay([])//make sure its empty first (incase sets twice)\n      if (config.stats){\n        for (let key in config.stats){\n          let obj = config.stats[key]\n          let row = <StatsRow date={obj.date} score={obj.score} accuracy={obj.accuracy+\"%\"} />\n          setStatsDisplay(old => [row, ...old])\n        }\n      }\n\n    }\n  }\n\n  const clearLocalStorage = () =>{\n    localStorage.clear()\n    window.location.reload()\n  }\n\n  function newQuestion(){\n    //console.log(\"NEW QUESTION\")\n    if (!n1range || !n2range){\n      //console.log(\"ranges empty\")\n    }else{\n      let randOp = randItem(validoperators)\n      setOperator(randOp)\n      // give nice numbers if subtract or divide\n      // like non negative answers and non decimal point numbers\n      if (randOp === \"/\"){\n        let n1 = randItem(n1range)\n        let n2 = randItem(n2range)\n        // we'll let n2 be the answer (since its the non customizable one) cus like customizing answer = ez scores just spam the answer u chose\n        // therefore we give n1*n2 / n1 = n2 and give n1*n2 and n1 only\n        setNum1(n1*n2)\n        setNum2(n1)\n      }else if (randOp === \"-\"){\n        //subtracting is weird why would u specify numbers u want to subtract\n        //find we do this the same way as division then...\n        let n1 = randItem(n1range)\n        let n2 = randItem(n2range)\n        setNum1(n1+n2)\n        setNum2(n1)\n      }else{\n        setNum1(randItem(n1range))\n        setNum2(randItem(n2range))\n      }\n\n      \n    }\n  }\n\n  function markAnswer(){\n    setQuestionsAnswered(prev=>prev+1)\n    if (eval(`${num1} ${operator} ${num2}`) == answer){\n      //correct\n      document.getElementById('answer-input').style.color = 'white' //reset input colour\n      newQuestion()\n      document.getElementById('answer-input').value = '' // clear input box\n      addTranscript(true, `${num1} ${operatorText} ${num2} = `, `${answer}`, `${eval(`${num1} ${operator} ${num2}`)}`)\n      setCorrects(prev=>prev+1)\n    }else{\n      //incorrect\n      document.getElementById('answer-input').style.color = 'palevioletred' //set input red colour\n      if (answer % num1 === 0 && operator===\"*\"){ \n        addTranscript(false, `${num1} ${operatorText} ${num2} = ${eval(`${num1} ${operator} ${num2}`)}, ${num1} ${operatorText} ${Math.floor(answer / num1)} = ${answer}`, `${answer}`, `${eval(`${num1} ${operator} ${num2}`)}`)\n      }else if (answer % num2 ===0 && operator===\"*\"){\n        addTranscript(false, `${num1} ${operatorText} ${num2} = ${eval(`${num1} ${operator} ${num2}`)}, ${Math.floor(answer / num2)} ${operatorText} ${num2} = ${answer}`, `${answer}`, `${eval(`${num1} ${operator} ${num2}`)}`)\n      }else{\n        addTranscript(false, `${num1} ${operatorText} ${num2} = ${eval(`${num1} ${operator} ${num2}`)}`, `${answer}`, `${eval(`${num1} ${operator} ${num2}`)}`)\n      }\n    }\n  }\n\n  function addTranscript(status, question, answer, feedback){\n    //console.log(\"TRANSCRIPT\", transcript)\n    let row = <><TranscriptRow status={status} question={question} answer={answer} feedback={feedback} /></>\n    setTranscript(old => [row, ...old]) // insert new row at front of array (not back)\n\n    let conf = JSON.parse(localStorage.getItem('config'))\n    //console.log(\"COFIG is\", conf)\n    conf['transcript'] = transcript\n    //console.log(\"ADD TRANSCRIPT CONF\", conf)\n    localStorage.setItem('config', JSON.stringify(conf))\n  }\n\n  function clearTranscript(){\n    setTranscript([])\n  }\n\n  function updateSettings(){\n    //get numbers to include\n    let elements = document.getElementsByClassName('checkbox-number-input');\n    let includedNums = []\n    for (var i=0; elements[i]; i++){\n      if (elements[i].checked){\n        elements[i].checked = true\n        includedNums.push(Number(elements[i].value))\n      }\n    }\n    setn1range(includedNums)\n    // a useEffect will be used to update to local storage when n1range changes\n\n    //get operators to include\n    elements = document.getElementsByClassName('checkbox-op-input');\n    let includedOps = []\n    for (var i=0; elements[i]; i++){\n      if (elements[i].checked){\n        //elements[i].checked = true\n        includedOps.push(elements[i].value)\n      }\n    }\n    //console.log(\"INCLUDED OPS\",includedOps)\n    setValidOperators(includedOps)\n  }\n  \n  function selectAllNumbers(){\n    setn1range(range(1,12))\n  }\n\n  function selectNoNumbers(){\n    setn1range([])\n  }\n\n  function saveScore(){\n    let config = JSON.parse(localStorage.getItem('config'))\n    if (!stats || questionsAnswered===0){\n    }else{\n      //adds to local storage\n      let stats = {};\n\n      const d = new Date();\n      let [year, month, date, hours, minutes] = [d.getFullYear(), d.getMonth(), d.getDate(), d.getHours(), d.getMinutes()] //who tf needs seconds for precision on a math website\n      let dateString = `${date}/${month}/${year} ${String(hours).length===2 ? hours : \"0\" + String(hours)}:${String(minutes).length===2 ? minutes : \"0\" + String(minutes)}`\n      let unixTime = d.getTime() //will be used as key for the objects like {unixtime:{date,score,accuracy}}\n      \n      let accuracyNum = (corrects!=0 ? round(corrects/questionsAnswered*100,2) : 0)\n      config.stats[unixTime] = {date: dateString, score: [corrects, questionsAnswered], accuracy: accuracyNum}\n      //console.log(config.stats)\n      localStorage.setItem('config', JSON.stringify(config))\n\n      //adds element to stats div\n      let row = <><StatsRow date={dateString} score={[corrects, questionsAnswered]} accuracy={accuracyNum+\"%\"} /></>\n      setStatsDisplay(old => [row, ...old]) // insert new row at front of array (not back)  \n\n    }\n  }\n\n  function toggleTranscript(){//shows/hides transcript (to show the stats)\n    let transcriptContainer = document.getElementById(\"transcriptContainer\")\n    let statsContainer = document.getElementById(\"stats-container\")\n    //console.log(transcriptContainer.style.display)\n    if (transcriptContainer.style.display === \"block\" || transcriptContainer.style.display === ''){ //check if empty too (idk why but in css i specified but it still shows up as empty at start)\n      transcriptContainer.style.display = \"none\"\n      statsContainer.style.display = \"block\"\n      setStatsText(\"hide statistics\")\n    }else{\n      transcriptContainer.style.display = \"block\"\n      statsContainer.style.display = \"none\"\n      setStatsText(\"show statistics\")\n    }\n  }\n\n  function updateSavingSettings(){\n    //console.log(\"updating saving settings...\")\n    //console.log('document.getElementById(\"interval-saving-amount-input\").value', document.getElementById(\"interval-saving-amount-input\").value)\n    //console.log('document.getElementById(\"do-interval-saving-checkbox\").value', document.getElementById(\"do-interval-saving-checkbox\").checked)\n\n    setIntervalSavingAmount(document.getElementById(\"interval-saving-amount-input\").value)\n    setDoIntervalSaving(document.getElementById(\"do-interval-saving-checkbox\").checked)\n  }\n\n  //COMPONENTS\n  const NumberLabel = (props) => { //ES6 function thing, not using class as i need to parse variables\n    let isChecked = false\n\n    if (n1range){\n      isChecked = (n1range.includes(Number(props.num)))\n    }\n\n    return(\n    <>\n    <label class=\"checkbox-num-label\" for={\"number\" + props.num}>{props.num} </label>\n    <input defaultChecked={isChecked} value={props.num} class=\"checkbox-number-input\" type='checkbox' id={\"n\" + props.num} name={\"number\" + props.num}></input>\n    <br></br>\n    </>\n    )\n  }\n\n  const OperatorLabel = (props) => {\n    let isChecked = false\n\n    if (validoperators){\n      isChecked = (validoperators.includes(props.op))\n    }\n\n    return (\n    <>\n    <label class=\"checkbox-op-label\" for={\"operator\" + props.op}>{mapArithmeticChar(props.op)} </label>\n    <input defaultChecked={isChecked} value={props.op} class=\"checkbox-op-input\" type='checkbox' id={\"op\" + props.op} name={\"operator\" + props.op}></input>\n    </>\n    )\n  }\n\n  const TranscriptRow = (props) =>{\n    let color = 'transcript-incorrect'\n    if (props.status){\n      color = 'transcript-correct'\n    }\n    return (\n    <>\n    <tr className={color+\" transcript-table-row\"}>\n      <td className='transcript-table-data-q'>{props.question}</td>\n      <td className='transcript-table-data-ans'>{props.answer}</td>\n      <td className='transcript-table-data-fb'>{props.feedback}</td>\n    </tr>\n    </>\n    )\n  }\n\n  const StatsRow = (props) =>{\n    return (\n    <>\n    <tr className={\"stats-table-row\"}>\n      <td className='stats-table-data-date'>{props.date}</td>\n      <td className='stats-table-data-score'>{props.score[0]}/{props.score[1]}</td>\n      <div className='stats-table-data-acc' style={{width: '100%', backgroundColor: 'palevioletred'}}>\n        <div style={{width: props.accuracy, backgroundColor: 'rgb(49, 136, 76)'}}>\n          <td>{props.accuracy}</td>\n        </div>\n      </div>\n    </tr>\n    </>\n    )\n  }\n\n  //USE EFFECTS\n\n  useEffect(()=>{ // on page load\n\n    /*\n\n    plan: local storage to store json config\n    json config includes\n    - QUESTION CONFIG\n      - n1range (range n1 can be) stored like [min, max] inclusive\n      - n2range (range n2 can be)\n      - operator (mode of operation)\n    - TRANSCRIPT (clearable) transcript of questions answered\n      - tuple of (status[true false right or wrong], question, answer, feedback)\n    - SCORES (each session?)\n      - correct answers\n      - wrong answers\n\n    */\n    \n    getLocalStorage()\n    //updateLocalStorage()\n    newQuestion()\n    setStatsText(\"show statistics\")\n  }, []);\n\n  useEffect(()=>{ //set operater text\n    let optext = mapArithmeticChar(operator)\n    setOperatorText(optext)\n  }, [operator])\n\n  useEffect(()=>{\n    newQuestion()\n    //save n1range to local storage\n    let config = JSON.parse(localStorage.getItem('config'))\n    if (!n1range && n1range!==[]){\n    }else{\n      config['questionSettings']['n1range'] = n1range\n      localStorage.setItem('config', JSON.stringify(config))\n    }\n\n  }, [n1range])\n\n  useEffect(()=>{\n    //save valid ops to local storage\n    let config = JSON.parse(localStorage.getItem('config'))\n    if (!validoperators){\n    }else{\n      config['questionSettings']['validOps'] = validoperators\n      localStorage.setItem('config', JSON.stringify(config))\n    }\n  }, [validoperators])\n\n  useEffect(()=>{\n    //save transcript to local storage\n    let config = JSON.parse(localStorage.getItem('config'))\n    if (!transcript){\n    }else{\n      config['transcript'] = transcript\n      localStorage.setItem('config', JSON.stringify(config))\n    }\n  }, [transcript])\n\n  useEffect(()=>{\n    //save score to local storage\n    let config = JSON.parse(localStorage.getItem('config'))\n    if ((!corrects || !questionsAnswered) && corrects !== 0 && questionsAnswered !== 0){\n    }else{\n      if (config.scores){\n        config['scores']['corrects'] = corrects\n        config['scores']['questionsAnswered'] = questionsAnswered\n        localStorage.setItem('config', JSON.stringify(config))\n      }\n    }\n  }, [corrects, questionsAnswered])\n\n  useEffect(()=>{\n    //update score to local storage when stats saved\n    let config = JSON.parse(localStorage.getItem('config'))\n    if (corrects && questionsAnswered){\n      config['scores']['corrects'] = corrects\n      config['scores']['questionsAnswered'] = questionsAnswered\n    }\n    localStorage.setItem('config', JSON.stringify(config))\n  }, [statsDisplay])\n\n  useEffect(()=>{\n    //check if it should save (for question interval saving)\n    if (\n      (questionsAnswered === Number(intervalSavingAmount) ||\n        (questionsAnswered > Number(intervalSavingAmount) && \n          questionsAnswered% Number(intervalSavingAmount) === 0\n        )\n      ) && doIntervalSaving){ //save and reset scores\n      //console.log(\"dointervaslaving\", doIntervalSaving)\n      saveScore(); setCorrects(0); setQuestionsAnswered(0)\n    }\n  }, [questionsAnswered])\n\n  useEffect(()=>{\n    let config = JSON.parse(localStorage.getItem('config'))\n    //console.log(\"dointervalsaving\", doIntervalSaving)\n    if (config.saving && (doIntervalSaving !== 0)){\n      config['saving']['doIntervalSaving'] = doIntervalSaving\n      localStorage.setItem('config', JSON.stringify(config))\n    }\n  }, [doIntervalSaving])\n\n  useEffect(()=>{\n    let config = JSON.parse(localStorage.getItem('config'))\n    if (config.saving && intervalSavingAmount){\n      config['saving']['interval'] = intervalSavingAmount\n      localStorage.setItem('config', JSON.stringify(config))\n    }\n  }, [intervalSavingAmount])\n\n\n  \n  //HTML FRAME RETURN\n  return (\n    <div className=\"App\">\n      <div class=\"leftsidenav\">\n        <h3>numbers included</h3>\n        <NumberLabel num=\"1\" />\n        <NumberLabel num=\"2\" />\n        <NumberLabel num=\"3\" />\n        <NumberLabel num=\"4\" />\n        <NumberLabel num=\"5\" />\n        <NumberLabel num=\"6\" />\n        <NumberLabel num=\"7\" />\n        <NumberLabel num=\"8\" />\n        <NumberLabel num=\"9\" />\n        <NumberLabel num=\"10\" />\n        <NumberLabel num=\"11\" />\n        <NumberLabel num=\"12\" />\n        <br></br>\n        <span><button onClick={()=>{selectAllNumbers()}}>all</button>\n        <button onClick={()=>{selectNoNumbers()}}>none</button></span>\n        <br></br>\n        <h3>operation</h3>\n        <OperatorLabel op=\"+\" /><span> </span> {/*space seperation*/}\n        <OperatorLabel op=\"-\" />\n        <br></br>\n        <OperatorLabel op=\"*\" /><span> </span>\n        <OperatorLabel op=\"/\" />\n        <br></br>\n        <br></br>\n        <button onClick={()=>{updateSettings()}}>update</button>\n        <p style={{position:\"absolute\", bottom:\"2vh\", \"left\":\"2vh\"}}>v1.0.2</p>\n        \n      </div>\n      <div class=\"rightsidenav\">\n        <h3>score</h3>\n        <p>{corrects}/{questionsAnswered}</p>\n        <h3>accuracy</h3>\n        <p>{(corrects!=0 ? round(corrects/questionsAnswered*100,2) : 0)}%</p> {/* ternary operator for case of 0 divide 0 = undefined */}\n        <h3>statistics</h3>\n        <button onClick={()=>{saveScore(); setCorrects(0); setQuestionsAnswered(0)}}>save score</button>\n        <button onClick={()=>{toggleTranscript()}}>{statsText}</button>\n        <h4>auto save statistics</h4>\n        <span>\n          <input id=\"do-interval-saving-checkbox\" type=\"checkbox\" defaultChecked={doIntervalSaving} />every<span> </span>\n          <input id=\"interval-saving-amount-input\" type=\"number\" min={1} style={{width:\"2vw\"}} />\n          questions\n        </span>\n        <br></br>\n        <button onClick={()=>{updateSavingSettings()}}>update</button>\n        <h3>other</h3>\n        <button onClick={()=>{clearTranscript()}}>clear transcript</button>\n        <button onClick={()=>{clearLocalStorage()}}>clear local storage <br></br>(<b>deletes ALL data</b>)</button>\n        <button onClick={()=>{getLocalStorage()}}>update local storage (TESTING)</button>\n        <br></br>\n\n      </div>\n      <h1>welcome to Math X</h1> {/* title wait i should change this */}\n        <div id=\"question-container\">\n          <label id=\"question-text\">{(num1 && num2 && operator ? `${num1} ${operatorText} ${num2} = ` : \"you have to actually select some things \")}</label> {/* another ternary for when they dont even select stuff */}\n          <input \n          id = \"answer-input\" \n          type = \"tel\" \n          onKeyDown={(e) => {\n            if (e.key === 'Enter') {\n              if (num1 && num2 && operator){ //check if they actually selected options \n                if (e.target.value === ''){// now also checks if they inputting something (cant submit nothing as answer)\n                }else{\n                  markAnswer()\n                }\n              }\n            }\n          }}\n            onInput={(e) => setAnswer(e.target.value)} // get their input\n          />\n        </div>\n      <div id=\"bottom-container\">\n        <div id=\"transcriptContainer\">\n            <table id=\"transcript-table\">\n              <tbody id=\"transcript-table-body\">\n                <tr>\n                  <th className='transcript-table-data-q'>question</th>\n                  <th className='transcript-table-data-ans'>your answer</th>\n                  <th className='transcript-table-data-fb'>correct answer</th>\n                </tr>\n                {transcript}\n              </tbody>\n            </table>\n        </div>\n        <div id=\"stats-container\">\n          <table id=\"stats-table\">\n                <tbody>\n                  <tr>\n                    <th className='stats-table-date'>date</th>\n                    <th className='stats-table-score'>score</th>\n                    <th className='stats-table-acc'>accuracy</th>\n                  </tr>\n                  {statsDisplay}\n                </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n    \n  );\n}\n\nexport default App;\n"],"sourceRoot":""}